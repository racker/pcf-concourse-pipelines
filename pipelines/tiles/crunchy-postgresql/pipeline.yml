resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:

- name: om-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: om
#    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pivnet-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: pivnet-cli
#    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: jq
  type: github-release
  source:
    user: stedolan
    repository: jq
#    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pipelines-repo
  type: git
  source:
    uri: ((github_repo))
    branch: ((github_branch))
#    username: ((github_username))
#    password: ((github_token))

- name: pivnet-product
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((product_name))
    product_version: ((product_version))

jobs:

- name: upload-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
    - get: pivnet-cli
      params:
        globs:
        - "*linux-amd64*"

  - task: upload-tile
    file: pipelines-repo/tasks/upload-product/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))

  - task: upload-stemcell
    file: pipelines-repo/tasks/stemcell-uploader/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))
      NO_PROXY: ((company_proxy_domain))
      OPS_MGR_IP: ((ops_mgr_ip))
      IAAS_TYPE: ((iaas_type))

- name: stage-product
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [upload-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [upload-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [upload-product]

  - task: stage-tile
    file: pipelines-repo/tasks/stage-product/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))

- name: config-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [stage-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [stage-product]
    - get: jq
      params:
        globs:
        - "*linux64*"

  - task: config-tile
    file: pipelines-repo/tasks/config-crunchy/task.yml
    params:
      PRODUCT_IDENTIFIER: ((product_identifier))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      OPS_MGR_GENERATE_SSL_ENDPOINT: ((ops_mgr_generate_ssl_endpoint))
      SINGLETON_JOBS_AZ: ((singleton_jobs_az))
      OTHER_AZS: ((other_azs))
      NETWORK_NAME: ((network_name))
      SERVICES_NETWORK_NAME: ((services_network_name))
      AZ_MULTI_SELECT: ((az_multi_select))
      CONSUL_SERVER_VM_TYPE: ((consul_server_vm_type))
      CONSUL_SERVER_DISK_TYPE: ((consul_server_disk_type))
      CONSUL_SERVER_INSTANCE_COUNT: ((consul_server_instance_count))
      POSTGRESQL_HAPROXY_VM_TYPE: ((postgresql_haproxy_vm_type))
      POSTGRESQL_HAPROXY_DISK_TYPE: ((postgresql_haproxy_disk_type))
      SMOKE_TESTS_VM_TYPE: ((smoke_tests_vm_type))
      SMOKE_TESTS_DISK_TYPE: ((smoke_tests_disk_type))
      SMALL_VM_TYPE: ((small_vm_type))
      SMALL_DISK_TYPE: ((small_disk_type))
      SMALL_POSTGRESQL_INSTANCE_COUNT: ((small_postgresql_instance_count))
      SMALL_POSTGRESQL_SERVICE_QUOTA: ((small_postgresql_service_quota))
      MEDIUM_VM_TYPE: ((medium_vm_type))
      MEDIUM_DISK_TYPE: ((medium_disk_type))
      MEDIUM_POSTGRESQL_INSTANCE_COUNT: ((medium_postgresql_instance_count))
      MEDIUM_POSTGRESQL_SERVICE_QUOTA: ((medium_postgresql_service_quota))
      LARGE_VM_TYPE: ((large_vm_type))
      LARGE_DISK_TYPE: ((large_disk_type))
      LARGE_POSTGRESQL_INSTANCE_COUNT: ((large_postgresql_instance_count))
      LARGE_POSTGRESQL_SERVICE_QUOTA: ((large_postgresql_service_quota))
      EXTRA_LARGE_VM_TYPE: ((extra_large_vm_type))
      EXTRA_LARGE_DISK_TYPE: ((extra_large_disk_type))
      EXTRA_LARGE_POSTGRESQL_INSTANCE_COUNT: ((extra_large_postgresql_instance_count))
      EXTRA_LARGE_POSTGRESQL_SERVICE_QUOTA: ((extra_large_postgresql_service_quota))
      CRUNCHY_BROKER_INSTANCE_TYPE: ((crunchy_broker_instance_type))
      CRUNCHY_BROKER_INSTANCES: ((crunchy_broker_instances))
      CRUNCHY_BROKER_PERSISTENT_DISK_SIZE: ((crunchy_broker_persistent_disk_size))

- name: disable-errands
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [config-product]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [config-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [config-product]
      trigger: true

  - task: disable-errands
    file: pipelines-repo/tasks/disable-errands/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))
      ERRANDS: ((errands_to_disable))

- name: apply-changes
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [disable-errands]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [disable-errands]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [disable-errands]

  - task: validate-apply-changes
    file: pipelines-repo/tasks/validate-apply-changes/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))

# - name: set-upgrade-pipeline
#   plan:
#   - aggregate:
#     - get: pipelines-repo
#       passed: [apply-changes]
#     - get: pivnet-product
#       resource: pivnet-product
#       params:
#         globs:
#         - "*.pivotal"
#       passed: [apply-changes]
#       trigger: true

#   - task: set-upgrade-pipeline
#     file: pipelines-repo/tasks/set-upgrade-pipeline/task.yml
#     params:
#       CONCOURSE_USERNAME: ((concourse_user))
#       CONCOURSE_PASSWD: ((concourse_pwd))
#       ATC_EXTERNAL_URL: ((concourse_url))
#       BUILD_PIPELINE_NAME: ((pipeline-name))
#       BUILD_TEAM_NAME: ((team-name))
#       UPGRADE_PIPELINE_NAME: ((upgrade-pipeline-name))
